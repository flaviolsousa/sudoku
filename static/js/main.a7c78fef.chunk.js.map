{"version":3,"sources":["services/sudokuService.js","contexts/SudokuHandler.js","contexts/SudokuReducer.js","contexts/SudokuContext.js","components/SudokuCell/SudokuCell.jsx","components/SudokuMatrix/SudokuMatrix.jsx","components/SudokuNumbers/SudokuNumbers.jsx","container/Sudoku/Sudoku.jsx","App.js","index.js"],"names":["sudoku","SudokuToolCollection","levels","EASY","MEDIUM","HARD","VERY_HARD","INSANE","INHUMAN","service","get","level","console","log","challenge","generator","generate","solution","solver","solve","data","lin","push","col","i","locked","editable","value","error","setOnCell","model","cell","str","index","chr","reduce","a","v","_modelToString","newChallenge","length","substring","strategies","numberFirst","init","state","cellClicked","action","control","selected","payload","numberClicked","number","cellFirst","mode","reducerAudit","s","type","handler","reducer","SudokuContext","createContext","initialState","numbers","Array","keys","map","o","SudokuProvider","children","useReducer","contextValue","dispatch","Provider","useSudokuContext","context","useContext","Error","SudokuCell","props","className","classnames","onClick","SudokuMatrix","SudokuNumbers","n","r","line","filter","remainingNumbers","createNumber","Sudoku","buttonLevel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c78fef.chunk.js","sourcesContent":["import SudokuToolCollection from \"sudokutoolcollection\";\n\nconst sudoku = SudokuToolCollection();\n\nexport const levels = {\n  EASY: \"easy\",\n  MEDIUM: \"medium\",\n  HARD: \"hard\",\n  VERY_HARD: \"very-hard\",\n  INSANE: \"insane\",\n  INHUMAN: \"inhuman\",\n};\n\nfunction _modelToString(model) {\n  return model.reduce(\n    (a, v) => (a += v.reduce((a, v) => (a += v.value), \"\")),\n    \"\"\n  );\n}\n\nfunction _setCharAt(str, index, chr) {\n  if (index > str.length - 1) return str;\n  return str.substring(0, index) + chr + str.substring(index + 1);\n}\n\nexport const get = ({ level }) => {\n  console.log(\"level:\", level);\n  const challenge = sudoku.generator.generate(levels[level]);\n  const solution = sudoku.solver.solve(challenge);\n\n  console.log(challenge);\n  console.log(solution);\n  // sudoku.instance.print_board(challenge);\n  // sudoku.instance.print_board(solution);\n\n  const width = 9;\n  const data = [];\n  for (let lin = 0; lin < width; lin++) {\n    data.push([]);\n    for (let col = 0; col < width; col++) {\n      const i = lin * width + col;\n      data[lin].push({\n        lin,\n        col,\n        i,\n        locked: challenge[i] !== \".\",\n        editable: challenge[i] === \".\",\n        value: challenge[i],\n        solution: solution[i],\n        error: false,\n      });\n    }\n  }\n\n  return data;\n};\n\nconst setOnCell = (model, cell, value) => {\n  const challenge = _modelToString(model);\n  const newChallenge = _setCharAt(\n    challenge,\n    cell.lin * model.length + cell.col,\n    value\n  );\n  const solution = sudoku.solver.solve(newChallenge);\n\n  // return _modelsEquals(newChallenge, solution)\n  return solution\n    ? { ...cell, value, error: false, editable: true }\n    : { ...cell, value, error: true, editable: false };\n};\n\nexport const service = {\n  levels,\n  get,\n  setOnCell,\n};\n\nexport default service;\n","import service from \"../services/sudokuService\";\n\nconst numberFirst = {\n  init: (state) => state,\n  cellClicked: ({ state, action }) => {\n    const control = state.control;\n    if (!control.selected) return state;\n\n    const cell = action.payload.cell;\n    if (!cell.editable) return state;\n\n    const model = [...state.model];\n\n    model[cell.lin][cell.col] = service.setOnCell(\n      model,\n      cell,\n      control.selected\n    );\n\n    return { ...state, model };\n  },\n  numberClicked: ({ state, action }) => {\n    return {\n      ...state,\n      control: {\n        ...state.control,\n        selected: action.payload.number,\n      },\n    };\n  },\n};\n\nconst cellFirst = {};\n\nconst strategies = {\n  numberFirst,\n  cellFirst,\n};\n\nconst control = {\n  init: ({ state, action }) => {\n    return strategies[state.control.mode].init({ state, action });\n  },\n\n  cellClicked: ({ state, action }) => {\n    return strategies[state.control.mode].cellClicked({ state, action });\n  },\n\n  numberClicked: ({ state, action }) => {\n    return strategies[state.control.mode].numberClicked({ state, action });\n  },\n};\n\nexport default control;\n","import handler from \"./SudokuHandler\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"cell/clicked\": {\n      return handler.cellClicked({ state, action });\n    }\n    case \"number/clicked\": {\n      return handler.numberClicked({ state, action });\n    }\n    case \"level/clicked\": {\n      console.log(\"##### level/clicked\");\n      return {\n        ...state,\n        level: action.payload,\n        model: handler.get(action.payload),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst reducerAudit = (state, action) => {\n  // console.log(\"event IN : state\", state, \" action\", action);\n  const s = reducer(state, action);\n  console.log(\"event OUT: state\", state);\n  return s;\n};\n\nexport default reducerAudit;\n","import { useContext, useReducer, createContext } from \"react\";\nimport service from \"../services/sudokuService\";\nimport reducer from \"./SudokuReducer\";\n\nconst SudokuContext = createContext();\n\nconst initialState = {\n  model: service.get({ level: \"EASY\" }),\n  numbers: [...Array(9).keys()].map((o) => \"\" + (o + 1)),\n  level: \"EASY\",\n  control: {\n    mode: \"numberFirst\",\n  },\n};\n\nconst SudokuProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const contextValue = { state, dispatch };\n\n  return (\n    <SudokuContext.Provider value={contextValue}>\n      {children}\n    </SudokuContext.Provider>\n  );\n};\n\nconst useSudokuContext = () => {\n  const context = useContext(SudokuContext);\n  if (!context) {\n    throw new Error(\"useSudokuContext must be used within a SudokuProvider\");\n  }\n  const { state, dispatch } = context;\n  return { state, dispatch };\n};\n\nexport { SudokuProvider, useSudokuContext };\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { useSudokuContext } from \"../../contexts/SudokuContext\";\n\nimport \"./style.css\";\n\nfunction SudokuCell(props) {\n  const {\n    state: { control },\n    dispatch,\n  } = useSudokuContext();\n\n  return (\n    <div\n      className={classnames(\n        \"SudokuCell\",\n        `SudokuCell-col-${props.cell.col}`,\n        `SudokuCell-lin-${props.cell.lin}`,\n        {\n          \"SudokuCell-locked\": props.cell.locked,\n          \"SudokuCell-n-locked\": !props.cell.locked,\n          \"SudokuCell-error\": props.cell.error,\n          \"SudokuCell-empty\": props.cell.value === \".\",\n          \"SudokuCell-not-empty\": props.cell.value !== \".\",\n          \"SudokuCell-number-selected\": props.cell.value === control.selected,\n        }\n      )}\n      onClick={() =>\n        dispatch({ type: \"cell/clicked\", payload: { cell: props.cell } })\n      }\n    >\n      <span>{props.cell.value}</span>\n    </div>\n  );\n}\n\nexport default SudokuCell;\n","import React from \"react\";\nimport { useSudokuContext } from \"../../contexts/SudokuContext\";\n\nimport \"./style.css\";\nimport SudokuCell from \"../SudokuCell\";\n\nfunction SudokuMatrix(props) {\n  const {\n    state: { model, control },\n    dispatch,\n  } = useSudokuContext();\n\n  return (\n    <div className=\"SudokuMatrix\">\n      {model.map((lin) =>\n        lin.map((cell) => (\n          <SudokuCell\n            key={cell.i}\n            cell={cell}\n            model={model}\n            control={control}\n            cellClicked={() =>\n              dispatch({ type: \"cell/clickeds\", payload: cell })\n            }\n          />\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default SudokuMatrix;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { useSudokuContext } from \"../../contexts/SudokuContext\";\n\nimport \"./style.css\";\n\nconst remainingNumbers = (model, n) => {\n  return (\n    9 -\n    model.reduce(\n      (a, line) => a + line.filter((v) => v.value === \"\" + n).length,\n      0\n    )\n  );\n};\n\nfunction SudokuNumbers() {\n  const {\n    state: { numbers, model, control },\n    dispatch,\n  } = useSudokuContext();\n\n  function createNumber(n) {\n    const r = remainingNumbers(model, n);\n    return (\n      <div\n        className={classnames(\"SudokuNumber\", `SudokuNumber-${n}`, {\n          \"SudokuNumber-selected\": control.selected === n,\n          \"SudokuNumber-finished\": r === 0,\n        })}\n        key={n}\n        onClick={() =>\n          dispatch({ type: \"number/clicked\", payload: { number: n } })\n        }\n      >\n        <span>{n}</span>\n        <sub>{r}</sub>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"SudokuNumbers\">{numbers.map((n) => createNumber(n))}</div>\n  );\n}\n\nexport default SudokuNumbers;\n","import React from \"react\";\nimport { SudokuProvider } from \"../../contexts/SudokuContext\";\n\nimport \"./style.css\";\nimport SudokuMatrix from \"../../components/SudokuMatrix\";\nimport SudokuNumbers from \"../../components/SudokuNumbers\";\n\nfunction Sudoku() {\n  const buttonLevel = (level) => {\n    return <button onClick={function () {}}>{level}</button>;\n  };\n\n  const generateLevels = () => {\n    return (\n      <>\n        {buttonLevel(\"EASY\")}\n        {buttonLevel(\"MEDIUM\")}\n        {buttonLevel(\"HARD\")}\n        {buttonLevel(\"VERY_HARD\")}\n        {buttonLevel(\"INSANE\")}\n        {buttonLevel(\"INHUMAN\")}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"Sudoku\">\n      <SudokuProvider>\n        <SudokuMatrix />\n        <SudokuNumbers />\n        {generateLevels()}\n      </SudokuProvider>\n    </div>\n  );\n}\n\nexport default Sudoku;\n","import Sudoku from \"./container/Sudoku\";\n\nimport \"./assets/style.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sudoku />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}